name: Run push.py every 6 hours

on:
  schedule:
    - cron: "0 */6 * * *"  # Executa a cada 6 horas (UTC: meia-noite, 6h, 12h, 18h)
  workflow_dispatch:       # Permite execu√ß√£o manual via interface do GitHub

jobs:
  run-script:
    runs-on: ubuntu-latest  # Usa a vers√£o mais recente do Ubuntu dispon√≠vel no GitHub Actions
    steps:
      ##########################################
      # Checkout do reposit√≥rio                #
      ##########################################
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main          # For√ßa checkout do branch 'main'
          fetch-depth: 0     # Baixa todo o hist√≥rico para permitir git pull e commits

      ##########################################
      # Ajusta permiss√µes do push.py           #
      ##########################################
      - name: Set executable permissions
        run: |
          echo "üîß Ajustando permiss√µes do push.py..."
          sudo chmod +x push.py || { echo "‚ùå Erro: push.py n√£o encontrado!"; exit 1; }
          echo "‚úÖ Permiss√µes ajustadas com sucesso."

      ##########################################
      # Configura Python 3.11                  #
      ##########################################
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"  # Define explicitamente Python 3.11
        continue-on-error: false  # Para o workflow se a configura√ß√£o falhar

      ##########################################
      # Instala depend√™ncias do sistema        #
      ##########################################
      - name: Install system dependencies
        run: |
          echo "üîß Atualizando lista de pacotes do sistema..."
          sudo apt-get update -y || { echo "‚ùå Falha ao atualizar pacotes!"; exit 1; }
          
          echo "üîß Instalando ffmpeg..."
          sudo apt-get install -y ffmpeg || { echo "‚ùå Falha ao instalar ffmpeg!"; exit 1; }
          
          echo "‚úÖ Depend√™ncias do sistema instaladas com sucesso!"

      ##########################################
      # Instala depend√™ncias Python            #
      ##########################################
      - name: Install Python dependencies
        run: |
          echo "üîß Atualizando pip para Python 3.11..."
          python3 -m pip install --upgrade pip || { echo "‚ùå Falha ao atualizar pip!"; exit 1; }
          
          echo "üîß Instalando yt-dlp>=2025.02.19..."
          python3 -m pip install "yt-dlp>=2025.02.19" || { echo "‚ùå Falha ao instalar yt-dlp!"; exit 1; }
          
          echo "‚úÖ Depend√™ncias Python instaladas com sucesso!"

      ##########################################
      # Executa o script push.py               #
      ##########################################
      - name: Run push.py
        run: |
          echo "üöÄ Executando push.py com Python 3.11..."
          python3 push.py || { echo "‚ùå Erro ao executar push.py!"; exit 1; }
          echo "‚úÖ push.py executado com sucesso!"

      ##########################################
      # Commit e push das mudan√ßas             #
      ##########################################
      - name: Commit and push changes
        run: |
          echo "üîß Configurando identidade do Git..."
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
          echo "üîß Sincronizando com o reposit√≥rio remoto..."
          git pull --rebase origin main || true  # Ignora falhas se j√° estiver atualizado
          
          echo "üîß Adicionando arquivos ao staging..."
          git add lives.m3u8 Hhshs/TV-FIX.m3u || true  # Ignora se os arquivos n√£o existirem
          
          echo "üîß Verificando mudan√ßas para commit..."
          if git diff --staged --quiet; then
            echo "‚ÑπÔ∏è Nenhuma mudan√ßa para commitar."
          else
            echo "üîß Fazendo commit das mudan√ßas..."
            git commit -m "Atualiza playlists lives.m3u8 e TV-FIX.m3u [autom√°tico]" || { echo "‚ùå Erro ao fazer commit!"; exit 1; }
            
            echo "üîß Enviando mudan√ßas para o reposit√≥rio..."
            git push https://${{ secrets.REPO_TOKEN }}@github.com/Walter-Henri/Hhshs.git HEAD:main || {
              echo "‚ö†Ô∏è Push falhou, tentando for√ßar..."
              git push --force https://${{ secrets.REPO_TOKEN }}@github.com/Walter-Henri/Hhshs.git HEAD:main || {
                echo "‚ùå Erro ao fazer push mesmo com for√ßa!"; exit 1;
              }
            }
            echo "‚úÖ Mudan√ßas enviadas com sucesso!"
          fi
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}  # Token de autentica√ß√£o para o reposit√≥rio