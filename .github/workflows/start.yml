name: Run push.py every 6 hours

on:
  schedule:
    - cron: "0 */6 * * *"  # Executa a cada 6 horas (meia-noite, 6h, 12h, 18h UTC)
  workflow_dispatch:       # Permite execução manual via interface do GitHub

jobs:
  run-script:
    runs-on: ubuntu-latest  # Usa a última versão do Ubuntu disponível no GitHub Actions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main          # Força checkout do branch 'main'
          fetch-depth: 0     # Baixa todo o histórico para evitar conflitos no git pull

      - name: Update repository
        run: |
          echo "Atualizando repositório..."
          git pull origin main || true  # Ignora falhas (ex.: já atualizado ou conflitos menores)
          echo "Repositório atualizado com sucesso do branch 'main'."

      - name: Verify branch
        run: |
          echo "Verificando branch atual..."
          git branch --show-current | grep -q "^main$" || { echo "Erro: Não estamos no branch 'main'"; exit 1; }
          echo "Branch 'main' confirmado."

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"  # Configura Python 3 (versão mais recente disponível)
        continue-on-error: false  # Garante que falhas aqui parem o workflow

      - name: Run setup_and_run.py
        run: |
          echo "Executando setup_and_run.py para instalar dependências e rodar push.py..."
          python3 setup_and_run.py || { echo "Erro ao executar setup_and_run.py"; exit 1; }
          echo "setup_and_run.py executado com sucesso."

      - name: Commit and push changes
        run: |
          echo "Configurando identidade do Git..."
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
          echo "Sincronizando com o repositório remoto..."
          git pull origin main --rebase || true  # Ignora falhas (ex.: já atualizado)
          
          echo "Adicionando arquivos ao staging..."
          git add lives.m3u8 Hhshs/TV-FIX.m3u || true  # Ignora se os arquivos não existirem
          
          echo "Fazendo commit das mudanças..."
          git commit -m "Atualiza lives.m3u8 e Hhshs/TV-FIX.m3u" || true
          
          echo "Enviando mudanças para o repositório..."
          git push https://${{ secrets.REPO_TOKEN }}@github.com/Walter-Henri/Hhshs.git HEAD:main || \
          git push --force https://${{ secrets.REPO_TOKEN }}@github.com/Walter-Henri/Hhshs.git HEAD:main || { echo "Erro ao fazer push"; exit 1; }
          echo "Mudanças enviadas com sucesso."