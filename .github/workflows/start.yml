name: Run push.py every 6 hours

on:
  schedule:
    - cron: "0 */6 * * *"  # Executa a cada 6 horas (meia-noite, 6h, 12h, 18h UTC)
  workflow_dispatch:       # Permite execução manual via interface do GitHub

jobs:
  run-script:
    runs-on: ubuntu-latest  # Usa a última versão do Ubuntu disponível no GitHub Actions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main          # Força checkout do branch 'main'
          fetch-depth: 0     # Baixa todo o histórico para evitar conflitos no git pull

      - name: Update repository
        run: |
          # Atualiza o repositório local com o estado mais recente do 'main'
          git pull origin main || true  # Ignora falhas (ex.: já atualizado ou conflitos menores)
          echo "Repositório atualizado com sucesso do branch 'main'."

      - name: Verify branch
        run: |
          # Confirma que estamos no branch 'main'
          git branch --show-current | grep -q "^main$" || (echo "Erro: Não estamos no branch 'main'" && exit 1)

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"  # Configura Python 3 (versão mais recente disponível)

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Atualiza pip para a versão mais recente
          pip install yt-dlp requests  # Instala yt-dlp e requests (necessário para testar proxies)

      - name: Add cookies file
        run: echo "${{ secrets.YOUTUBE_COOKIES }}" > cookies.txt
        env:
          YOUTUBE_COOKIES: ${{ secrets.YOUTUBE_COOKIES }}  # Carrega cookies do segredo do repositório

      - name: Verify environment
        run: |
          python --version  # Exibe a versão do Python para depuração
          pip list | grep -E "yt-dlp|requests"  # Confirma que yt-dlp e requests estão instalados
          ls -la  # Lista arquivos no diretório para verificar cookies.txt e outros arquivos

      - name: Run push.py
        run: python push.py  # Executa o script para verificar lives e gerar/atualizar arquivos M3U

      - name: Commit and push changes
        run: |
          # Configura identidade do Git para commits
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
          # Sincroniza novamente com o repositório remoto usando rebase (caso haja mudanças externas durante a execução)
          git pull origin main --rebase || true  # Ignora falhas (ex.: já atualizado)
          
          # Adiciona arquivos gerados ou modificados ao staging
          git add lives.m3u8 Hhshs/TV-FIX.m3u || true  # Ignora se os arquivos não existirem
          
          # Faz commit das mudanças, ignorando se não houver alterações
          git commit -m "Atualiza lives.m3u8 e Hhshs/TV-FIX.m3u" || true
          
          # Tenta push normal para 'main'; força o push se o normal falhar
          git push https://${{ secrets.REPO_TOKEN }}@github.com/Walter-Henri/Hhshs.git HEAD:main || \
          git push --force https://${{ secrets.REPO_TOKEN }}@github.com/Walter-Henri/Hhshs.git HEAD:main
