name: Run push.py every 6 hours

on:
  schedule:
    - cron: "0 */6 * * *"  # Executa a cada 6 horas (UTC)
  workflow_dispatch:       # Permite execu√ß√£o manual via interface do GitHub

jobs:
  run-script:
    runs-on: ubuntu-latest  # Usa a vers√£o mais recente do Ubuntu dispon√≠vel no GitHub Actions
    steps:
      ##########################################
      # Checkout do reposit√≥rio                #
      ##########################################
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main          # For√ßa checkout do branch 'main'
          fetch-depth: 0     # Baixa todo o hist√≥rico para permitir git pull e commits

      ##########################################
      # Ajusta permiss√µes dos arquivos         #
      ##########################################
      - name: Set executable permissions
        run: |
          echo "üîß Ajustando permiss√µes de arquivos..."
          sudo chmod +x *  # Torna todos os arquivos execut√°veis

      ##########################################
      # Configura Python                       #
      ##########################################
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"  # Define a vers√£o do Python como 3.11

      ##########################################
      # Instala depend√™ncias do sistema        #
      ##########################################
      - name: Install system dependencies
        run: |
          echo "üîß Instalando depend√™ncias do sistema..."
          sudo apt-get update -y  # Atualiza lista de pacotes
          sudo apt-get install -y \
            libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libgbm1 \
            libasound2t64 libx11-xcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxi6 libxtst6  # Instala depend√™ncias necess√°rias

      ##########################################
      # Executa o script Python                #
      ##########################################
      - name: Run setup_and_run.py
        run: |
          echo "üöÄ Executando setup_and_run.py..."
          python3 setup_and_run.py || { echo "‚ùå Erro ao executar script"; exit 1; }
        env:
          CI: true  # Sinaliza que est√° sendo executado em um ambiente CI

      ##########################################
      # Commit e push das mudan√ßas             #
      ##########################################
      - name: Commit and push changes
        run: |
          echo "üîß Configurando Git..."
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
          echo "üîß Pull para sincronizar com o reposit√≥rio remoto..."
          git pull --rebase origin main || true  # Ignora falhas se j√° estiver atualizado
          
          echo "üîß Adicionando altera√ß√µes..."
          git add lives.m3u8 Hhshs/TV-FIX.m3u || true  # Ignora se os arquivos n√£o existirem
          
          echo "üîß Fazendo commit..."
          git commit -m "Atualiza playlists [autom√°tico]" || true  # Ignora se n√£o houver mudan√ßas
          
          echo "üîß Push para o reposit√≥rio remoto..."
          git push https://${{ secrets.REPO_TOKEN }}@github.com/Walter-Henri/Hhshs.git HEAD:main || {
            echo "‚ö†Ô∏è Tentando for√ßar push..."
            git push --force https://${{ secrets.REPO_TOKEN }}@github.com/Walter-Henri/Hhshs.git HEAD:main
          }
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}  # Token de autentica√ß√£o para o reposit√≥rio